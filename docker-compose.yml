version: '3.8'

services:
  # Zookeeper para Kafka
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: "1"
      ZOOKEEPER_LISTENER_PORT: "2181"
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  # Kafka Broker
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - kafka-network

  # Spark Master
  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
    ports:
      - "8080:8080"  # Interfaz web de Spark
      - "7077:7077"  # Puerto de comunicaci√≥n del Spark master
    networks:
      - kafka-network

  # Spark Worker
  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
    depends_on:
      - spark-master
    networks:
      - kafka-network

  # HDFS Namenode
  hadoop-namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: hadoop-namenode
    ports:
      - "9000:9000"
      - "9870:9870"
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://hadoop-namenode:9000
    volumes:
      - hadoop-namenode:/hadoop/dfs/name
    networks:
      - kafka-network

  # HDFS Datanode
  hadoop-datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: hadoop-datanode
    environment:
      - CLUSTER_NAME=test
      - NAMENODE_URI=hdfs://hadoop-namenode:9000
      - CORE_CONF_fs_defaultFS=hdfs://hadoop-namenode:9000
    volumes:
      - hadoop-datanode:/hadoop/dfs/data
    depends_on:
      - hadoop-namenode
    networks:
      - kafka-network

  # Producer (simulador de datos)
  producer:
    build:
      context: .
      dockerfile: Dockerfile.producer  # Especificar el Dockerfile del productor
    container_name: producer
    depends_on:
      - kafka
    networks:
      - kafka-network

  # Spark Job
  spark-job:
    build:
      context: .
      dockerfile: Dockerfile.spark-job  # Especificar el Dockerfile del Spark job
    container_name: spark-job
    depends_on:
      - kafka
      - spark-master
      - hadoop-namenode
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge

volumes:
  hadoop-namenode:
  hadoop-datanode:
